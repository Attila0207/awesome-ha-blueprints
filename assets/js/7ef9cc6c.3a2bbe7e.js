(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{82:function(e,t,o){"use strict";o.r(t),o.d(t,"frontMatter",(function(){return l})),o.d(t,"metadata",(function(){return s})),o.d(t,"toc",(function(){return c})),o.d(t,"default",(function(){return p}));var n=o(3),i=o(7),r=(o(0),o(101)),a=o(103),l={title:"IKEA E1744 SYMFONISK Rotary Remote",description:"Controller automation for executing any kind of action triggered by the provided IKEA E1744 SYMFONISK Rotary Remote. Supports deCONZ, ZHA, Zigbee2MQTT."},s={unversionedId:"blueprints/controllers/ikea_e1744",id:"blueprints/controllers/ikea_e1744",isDocsHomePage:!1,title:"IKEA E1744 SYMFONISK Rotary Remote",description:"Controller automation for executing any kind of action triggered by the provided IKEA E1744 SYMFONISK Rotary Remote. Supports deCONZ, ZHA, Zigbee2MQTT.",source:"@site/docs/blueprints/controllers/ikea_e1744.mdx",sourceDirName:"blueprints/controllers",slug:"/blueprints/controllers/ikea_e1744",permalink:"/awesome-ha-blueprints/docs/blueprints/controllers/ikea_e1744",editUrl:"https://github.com/EPMatt/awesome-ha-blueprints/edit/main/docs/blueprints/controllers/ikea_e1744.mdx",version:"current",frontMatter:{title:"IKEA E1744 SYMFONISK Rotary Remote",description:"Controller automation for executing any kind of action triggered by the provided IKEA E1744 SYMFONISK Rotary Remote. Supports deCONZ, ZHA, Zigbee2MQTT."}},c=[{value:"Description",id:"description",children:[]},{value:"Requirements",id:"requirements",children:[]},{value:"Inputs",id:"inputs",children:[]},{value:"Available Hooks",id:"available-hooks",children:[{value:"Light",id:"light",children:[]},{value:"Media Player",id:"media-player",children:[]}]},{value:"Additional Notes",id:"additional-notes",children:[]},{value:"Changelog",id:"changelog",children:[]}],b={toc:c};function p(e){var t=e.components,o=Object(i.a)(e,["components"]);return Object(r.b)("wrapper",Object(n.a)({},b,o,{components:t,mdxType:"MDXLayout"}),Object(r.b)(a.a,{id:"ikea_e1744",category:"controllers",mdxType:"ImportCard"}),Object(r.b)("br",null),Object(r.b)("div",{className:"admonition admonition-tip alert alert--success"},Object(r.b)("div",{parentName:"div",className:"admonition-heading"},Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",{parentName:"h5",className:"admonition-icon"},Object(r.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},Object(r.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),Object(r.b)("div",{parentName:"div",className:"admonition-content"},Object(r.b)("p",{parentName:"div"},"This blueprint is part of the ",Object(r.b)("strong",{parentName:"p"},"Controllers-Hooks Ecosystem"),". You can read more about this topic ",Object(r.b)("a",{parentName:"p",href:"/docs/controllers-hooks-ecosystem"},"here"),"."))),Object(r.b)("h2",{id:"description"},"Description"),Object(r.b)("p",null,"This blueprint provides universal support for running any custom action when a button is pressed on the provided IKEA E1744 SYMFONISK Rotary Remote. Supports controllers integrated with deCONZ, ZHA, Zigbee2MQTT. Just specify the integration used to connect the remote to Home Assistant when setting up the automation, and the blueprint will take care of all the rest."),Object(r.b)("p",null,"In addition of being able to provide custom actions for every kind of button press supported by the remote, the blueprint allows to loop the long press actions while the corresponding button is being held. Once released, the loop stops. This is useful when holding down a button should result in a continuous action (such as lowering the volume of a media player, or controlling a light brightness)."),Object(r.b)("p",null,"In addition of being able to provide custom actions for every kind of button press supported by the remote, the blueprint allows to optionally loop the rotate actions while the remote is rotating either left or right. Once the remote stops rotating, the loop stops as well. This is useful when rotating the controller should result in a continuous action (such as lowering the volume of a media player, or controlling a light brightness)."),Object(r.b)("div",{className:"admonition admonition-tip alert alert--success"},Object(r.b)("div",{parentName:"div",className:"admonition-heading"},Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",{parentName:"h5",className:"admonition-icon"},Object(r.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},Object(r.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),Object(r.b)("div",{parentName:"div",className:"admonition-content"},Object(r.b)("p",{parentName:"div"},"Automations created with this blueprint can be connected with one or more ",Object(r.b)("a",{parentName:"p",href:"/docs/blueprints/hooks"},"Hooks")," supported by this controller.\nHooks allow to easily create controller-based automations for interacting with media players, lights, covers and more. See the list of ",Object(r.b)("a",{parentName:"p",href:"/docs/blueprints/controllers/ikea_e1744#available-hooks"},"Hooks available for this controller")," for additional details."))),Object(r.b)("h2",{id:"requirements"},"Requirements"),Object(r.b)(a.c,{id:"deconz",mdxType:"Requirement"}),Object(r.b)(a.c,{id:"zha",mdxType:"Requirement"}),Object(r.b)(a.c,{id:"zigbee2mqtt",mdxType:"Requirement"},Object(r.b)("p",null,"When configuring the remote with Zigbee2MQTT make sure to disable the legacy integration for it, as reported ",Object(r.b)("a",{parentName:"p",href:"https://www.zigbee2mqtt.io/devices/E1744.html#legacy-integration"},"here"),". This blueprint won't work with controllers with a legacy integration due to their instability and fundamental problems.")),Object(r.b)(a.c,{name:"Input Text Integration",required:"ZHA, Zigbee2MQTT",mdxType:"Requirement"},Object(r.b)("p",null,"This integration provides the entity which will be used to store the last button event. It's required when using ZHA to integrate the remote, as well as when using double press events. This should be activated by default so unless you tweaked the default configuration you're good to go."),Object(r.b)("p",null,Object(r.b)("a",{parentName:"p",href:"https://www.home-assistant.io/integrations/input_text/"},"Input Text Integration Docs"))),Object(r.b)("h2",{id:"inputs"},"Inputs"),Object(r.b)(a.b,{name:"Integration",description:"Integration used for connecting the remote with Home Assistant. Select one of the available values.",selector:"select",required:!0,mdxType:"Input"}),Object(r.b)(a.b,{name:"Controller Device",description:"The controller device to use for the automation. Choose a value only if the remote is integrated with deCONZ, ZHA.",selector:"device",required:"(deCONZ, ZHA)",mdxType:"Input"}),Object(r.b)(a.b,{name:"Controller Entity",description:"The action sensor of the controller to use for the automation. Choose a value only if the remote is integrated with Zigbee2MQTT.",selector:"entity",required:"(Zigbee2MQTT)",mdxType:"Input"}),Object(r.b)(a.b,{name:"Rotate left",description:"Action to run on rotate left.",selector:"action",mdxType:"Input"}),Object(r.b)(a.b,{name:"Rotate left stop",description:"Action to run on when stopping to rotate left the remote.",selector:"action",mdxType:"Input"}),Object(r.b)(a.b,{name:"Rotate right",description:"Action to run on rotate right.",selector:"action",mdxType:"Input"}),Object(r.b)(a.b,{name:"Rotate right stop",description:"Action to run on when stopping to rotate right the remote.",selector:"action",mdxType:"Input"}),Object(r.b)(a.b,{name:"Remote - short press",description:"Action to run on short remote press.",selector:"action",mdxType:"Input"}),Object(r.b)(a.b,{name:"Remote - double press",description:"Action to run on double remote press.",selector:"action",mdxType:"Input"}),Object(r.b)(a.b,{name:"Remote - triple press",description:"Action to run on triple remote press.",selector:"action",mdxType:"Input"}),Object(r.b)(a.b,{name:"Rotate left - loop until stop",description:"Loop the rotate left action until the rotation is stopped.",selector:"boolean",required:!0,mdxType:"Input"}),Object(r.b)(a.b,{name:"Rotate right - loop until stop",description:"Loop the rotate right action until the rotation is stopped.",selector:"boolean",required:!0,mdxType:"Input"}),Object(r.b)(a.b,{name:"Helper - Last Controller Event",description:"Input Text used to store the last event fired by the controller. See docs for more.",selector:"entity",required:"(ZHA, Zigbee2MQTT Required)",mdxType:"Input"}),Object(r.b)("h2",{id:"available-hooks"},"Available Hooks"),Object(r.b)("h3",{id:"light"},"Light"),Object(r.b)("p",null,"This Hook blueprint allows to build a controller-based automation to control a light. Supports brightness and color control both for white temperature and rgb lights."),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Rotate left -> Brightness down (continuous, until stop)"),Object(r.b)("li",{parentName:"ul"},"Rotate right -> Brightness up (continuous, until stop)"),Object(r.b)("li",{parentName:"ul"},"Click -> Toggle"),Object(r.b)("li",{parentName:"ul"},"Double click -> Color up"),Object(r.b)("li",{parentName:"ul"},"Triple click -> Color down")),Object(r.b)("p",null,Object(r.b)("a",{parentName:"p",href:"/docs/blueprints/hooks/light"},"Light Hook docs")),Object(r.b)("h3",{id:"media-player"},"Media Player"),Object(r.b)("p",null,"This Hook blueprint allows to build a controller-based automation to control a media player. Supports volume setting, play/pause and track selection."),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Rotate left -> Volume down (continuous, until stop)"),Object(r.b)("li",{parentName:"ul"},"Rotate right -> Volume up (continuous, until stop)"),Object(r.b)("li",{parentName:"ul"},"Click -> Play/Pause"),Object(r.b)("li",{parentName:"ul"},"Double click -> Next track"),Object(r.b)("li",{parentName:"ul"},"Triple click -> Previous track")),Object(r.b)("p",null,Object(r.b)("a",{parentName:"p",href:"/docs/blueprints/hooks/media_player"},"Media Player Hook docs")),Object(r.b)("h2",{id:"additional-notes"},"Additional Notes"),Object(r.b)("p",null,"The reason why a text input is required to store the last long press event when using a remote with ZHA, Zigbee2MQTT is because of the actions mapping for the controller with these integrations. Natively, the controller doesn't allow to distinguish between different button release events, so the blueprint must store the previous clicked button, using the text input. Make sure the input text is not altered by any other agents, since this could break the automation."),Object(r.b)("h2",{id:"changelog"},"Changelog"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"2021-03-07"),": first blueprint version \ud83c\udf89"),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"2021-03-25"),": \u26a0\ufe0f ",Object(r.b)("strong",{parentName:"li"},"Breaking Change"),": standardize input names across all the Controller blueprints.\nIf you plan to update this blueprint, please update the inputs in your automations as follows:",Object(r.b)("ul",{parentName:"li"},Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"remote")," -> ",Object(r.b)("inlineCode",{parentName:"li"},"controller_device")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"zigbee2mqtt_remote")," -> ",Object(r.b)("inlineCode",{parentName:"li"},"controller_entity")),Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"action_click")," -> ",Object(r.b)("inlineCode",{parentName:"li"},"action_click_short"))))))}p.isMDXComponent=!0}}]);