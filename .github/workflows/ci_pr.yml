name: CI - PR

'on':
  pull_request:
    branches:
      - main
jobs:
  lint:
    name: Run Linters
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2
      - name: Setup Node.JS
        uses: actions/setup-node@v2
        with:
          node-version: '14'
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Website - Install dependencies
        run: cd website && npm ci
      - id: yamllint
        name: Yamllint
        uses: reviewdog/action-yamllint@v1
        with:
          github_token: ${{ secrets.github_token }}
          reporter: github-pr-check
          yamllint_flags: '.'
          fail_on_error: true
          filter_mode: nofilter
      - if: always()
        id: eslint
        name: ESLint
        uses: reviewdog/action-eslint@v1
        with:
          github_token: ${{ secrets.github_token }}
          reporter: github-pr-check
          eslint_flags: --ext js,jsx .
          fail_on_error: true
          filter_mode: nofilter
          workdir: website

  prettier-lint:
    name: Prettier - Check code style
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v2
      - name: Setup Node.JS
        uses: actions/setup-node@v2
        with:
          node-version: '14'
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install dependencies
        run: npm ci
      - name: Website - Install dependencies
        run: cd website && npm ci
      - id: prettier
        name: Prettier Check
        uses: creyD/prettier_action@v3.3
        with:
          dry: true
          prettier_options: --write .
        env:
          GITHUB_TOKEN: ${{ secrets.github_token }}

  pr-commenter-ci-success:
    name: Report CI Success
    runs-on: ubuntu-latest
    needs:
      - lint
      - prettier-lint
    steps:
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          list-files: json
          filters: |
            blueprints:
            - 'blueprints/**.yaml'
      - uses: hasura/comment-progress@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
          number: ${{ github.event.number }}
          id: ci-pr-progress
          message: |
            Hey @${{ github.actor }}, thank you so much for opening this PR! üöÄ

            *This comment keeps track of the status of this PR. We'll update this comment with progress regarding this PR, providing you guidance if additional actions need to be performed before your contribution is reviewed and merged.*

            ‚úÖ Your contribution passed all the checks, awesome!
            A maintainer will soon review your submission and provide additional feedback regarding your changes.
            Thanks again for dedicating your precious time to this project. üî•
      - if: steps.changes.outputs.blueprints == 'true'
        id: blueprints_urls
        env:
          FILES: ${{ steps.changes.outputs.blueprints_files }}
          REPO: ${{ github.event.pull_request.head.repo.full_name }}
        run: |
          urls=$(for f in $FILES; do echo "https://github.com/${REPO}/${GITHUB_HEAD_REF}/$i"; done)
          echo "::set-output name=urls::${urls}"
      - if: steps.changes.outputs.blueprints == 'true'
        uses: hasura/comment-progress@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
          number: ${{ github.event.number }}
          id: ci-pr-progress
          append: true
          message: |

            üìù Updated blueprints included in this PR can be tested by importing them in Home Assistant via the following links.

            ${{ join(steps.blueprints_urls.outputs.urls, '\n\n') }}
